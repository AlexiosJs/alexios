(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[15],{"7Bjp":function(e,n,a){"use strict";a.r(n);var t=a("ZZRV"),l=a.n(t),c=(a("u0Wm"),a("+cgr"),a("4gvG")),r=a.n(c);a("0S3p");n["default"]=function(){return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"markdown"},l.a.createElement("h1",{id:"mock"},l.a.createElement("a",{"aria-hidden":"true",href:"#mock"},l.a.createElement("span",{className:"icon icon-link"})),"Mock"),l.a.createElement("p",null,"JSON-like data structure, pluggable mock tool, support ",l.a.createElement("code",null,"GET"),", ",l.a.createElement("code",null,"POST"),", ",l.a.createElement("code",null,"PUT"),", ",l.a.createElement("code",null,"PATCH"),", ",l.a.createElement("code",null,"DELETE"),"."),l.a.createElement("h2",{id:"file-rules"},l.a.createElement("a",{"aria-hidden":"true",href:"#file-rules"},l.a.createElement("span",{className:"icon icon-link"})),"File Rules"),l.a.createElement("p",null,"We agreed that all ",l.a.createElement("code",null,".js")," files in the ",l.a.createElement("code",null,"/mock")," folder will be automatically imported as data sources, without manual import, and will be effective immediately after modification."),l.a.createElement("h2",{id:"the-first-mock-file"},l.a.createElement("a",{"aria-hidden":"true",href:"#the-first-mock-file"},l.a.createElement("span",{className:"icon icon-link"})),"The First Mock File"),l.a.createElement("p",null,"Create a new ",l.a.createElement("code",null,"/mock/user.js")," file with the following content:"),l.a.createElement(r.a,{code:'module.exports = {\n  "POST /api/getUserInfo": {\n    username: "alexios",\n    userid: 12345,\n  },\n};\n',lang:"js"}),l.a.createElement("p",null,"Use ",l.a.createElement("code",null,"POST")," to call the ",l.a.createElement("code",null,"/api/getUserInfo")," interface to get the defined data."),l.a.createElement("h2",{id:"functional-mock"},l.a.createElement("a",{"aria-hidden":"true",href:"#functional-mock"},l.a.createElement("span",{className:"icon icon-link"})),"Functional Mock"),l.a.createElement("p",null,"If you want to include logic code in the mock configuration, you can define it like this:"),l.a.createElement(r.a,{code:'module.exports = {\n  "POST /api/getUserInfo": function (request, response) {\n    /**\n     * request contains the request body, which can be used to make logical judgments\n     * API for request and response, refer to express\n     */\n    response.send(\n      JSON.stringify({\n        username: "alexios",\n        userid: 12345,\n      })\n    );\n  },\n};\n',lang:"js"})))}}}]);